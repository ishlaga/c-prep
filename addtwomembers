/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
// this function takes 2 pointers of the first node of linkedlist and add them.
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {

        ListNode dummy = ListNode();
        ListNode* current = &dummy;
        int carry=0;
        while(l1!= nullptr || l2!= nullptr || carry){
            int digit1 = (l1 == nullptr)? 0 :  l1->val;
            int digit2 = ( l2 == nullptr)? 0 :  l2->val;
            int value = digit1+digit2+carry;

            int digit = value%10;
            carry = value/10;

            current->next = new ListNode(digit);
            current = current->next;



        if (l1 != nullptr ){
            l1 = l1->next;

        }
        
        if (l2 != nullptr ){
            l2 = l2->next;

        }
            
        }
        return dummy.next;


        
    }
};